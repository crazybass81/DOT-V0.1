version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: dot-postgres
    environment:
      POSTGRES_DB: dot_platform_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5434:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dot-network

  postgres-test:
    image: postgis/postgis:15-3.3
    container_name: dot-postgres-test
    environment:
      POSTGRES_DB: dot_platform_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5435:5432"
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dot-network

  redis:
    image: redis:7-alpine
    container_name: dot-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dot-network

  # Optional: Adminer for database management
  adminer:
    image: adminer
    container_name: dot-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - dot-network

networks:
  dot-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: