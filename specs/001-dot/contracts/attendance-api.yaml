openapi: 3.0.3
info:
  title: DOT Platform - 근태 API
  description: DOT 플랫폼 근태 관리 API
  version: 0.1.0

servers:
  - url: http://localhost:3000/api/v1
    description: 개발 서버
  - url: https://api.dot-platform.com/v1
    description: 운영 서버

paths:
  /attendance/check-in:
    post:
      tags:
        - Attendance
      summary: 출근 체크인
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - qrToken
                - location
              properties:
                qrToken:
                  type: string
                  description: QR 코드 토큰
                location:
                  $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: 체크인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'
        '400':
          description: 잘못된 위치 또는 QR 코드
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /attendance/check-out:
    post:
      tags:
        - Attendance
      summary: 퇴근 체크아웃
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  $ref: '#/components/schemas/Location'
                notes:
                  type: string
                  nullable: true
      responses:
        '200':
          description: 체크아웃 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: 체크인 기록이 없음

  /attendance/break/start:
    post:
      tags:
        - Attendance
      summary: 휴게 시작
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: 휴게 시작 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'
        '400':
          description: 이미 휴게 중이거나 체크인하지 않음

  /attendance/break/end:
    post:
      tags:
        - Attendance
      summary: 휴게 종료
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: 휴게 종료 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'
        '400':
          description: 휴게 중이 아님

  /attendance/outside-work/start:
    post:
      tags:
        - Attendance
      summary: 외근 시작
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  $ref: '#/components/schemas/Location'
                reason:
                  type: string
      responses:
        '200':
          description: 외근 시작 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'

  /attendance/outside-work/end:
    post:
      tags:
        - Attendance
      summary: 외근 종료
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - location
              properties:
                location:
                  $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: 외근 종료 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'

  /attendance/status:
    get:
      tags:
        - Attendance
      summary: 실시간 근태 현황
      security:
        - bearerAuth: []
      parameters:
        - name: businessId
          in: query
          required: true
          schema:
            type: integer
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
          description: 기본값은 오늘
      responses:
        '200':
          description: 근태 현황
          content:
            application/json:
              schema:
                type: object
                properties:
                  checkedIn:
                    type: array
                    items:
                      $ref: '#/components/schemas/AttendanceStatus'
                  onBreak:
                    type: array
                    items:
                      $ref: '#/components/schemas/AttendanceStatus'
                  outsideWork:
                    type: array
                    items:
                      $ref: '#/components/schemas/AttendanceStatus'
                  checkedOut:
                    type: array
                    items:
                      $ref: '#/components/schemas/AttendanceStatus'
                  absent:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: integer
                        userName:
                          type: string

  /attendance/history:
    get:
      tags:
        - Attendance
      summary: 근태 기록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: businessId
          in: query
          schema:
            type: integer
        - name: userId
          in: query
          schema:
            type: integer
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
      responses:
        '200':
          description: 근태 기록 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AttendanceResponse'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /attendance/{attendanceId}:
    get:
      tags:
        - Attendance
      summary: 특정 근태 기록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: attendanceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 근태 기록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags:
        - Attendance
      summary: 근태 기록 수정 (관리자)
      security:
        - bearerAuth: []
      parameters:
        - name: attendanceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceUpdate'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'
        '403':
          $ref: '#/components/responses/Forbidden'

    delete:
      tags:
        - Attendance
      summary: 근태 기록 삭제 (관리자)
      security:
        - bearerAuth: []
      parameters:
        - name: attendanceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 삭제 성공
        '403':
          $ref: '#/components/responses/Forbidden'

  /attendance/report:
    get:
      tags:
        - Attendance
      summary: 근태 보고서 생성
      security:
        - bearerAuth: []
      parameters:
        - name: businessId
          in: query
          required: true
          schema:
            type: integer
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: format
          in: query
          schema:
            type: string
            enum: [pdf]
            default: pdf
      responses:
        '200':
          description: PDF 보고서
          content:
            application/pdf:
              schema:
                type: string
                format: binary

  /attendance/anomalies:
    get:
      tags:
        - Attendance
      summary: 근태 이상 현황
      security:
        - bearerAuth: []
      parameters:
        - name: businessId
          in: query
          required: true
          schema:
            type: integer
        - name: date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 이상 현황 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  late:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnomalyRecord'
                  earlyLeave:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnomalyRecord'
                  absence:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnomalyRecord'
                  overtime:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnomalyRecord'

components:
  schemas:
    Location:
      type: object
      required:
        - lat
        - lng
      properties:
        lat:
          type: number
          format: double
          minimum: -90
          maximum: 90
        lng:
          type: number
          format: double
          minimum: -180
          maximum: 180

    AttendanceResponse:
      type: object
      properties:
        id:
          type: integer
        businessId:
          type: integer
        userId:
          type: integer
        userName:
          type: string
        date:
          type: string
          format: date
        checkInTime:
          type: string
          format: date-time
          nullable: true
        checkInLocation:
          $ref: '#/components/schemas/Location'
        checkOutTime:
          type: string
          format: date-time
          nullable: true
        checkOutLocation:
          $ref: '#/components/schemas/Location'
        breakStartTimes:
          type: array
          items:
            type: string
            format: date-time
        breakEndTimes:
          type: array
          items:
            type: string
            format: date-time
        status:
          type: string
          enum: [scheduled, checked_in, on_break, outside_work, checked_out]
        totalWorkMinutes:
          type: integer
          nullable: true
        totalBreakMinutes:
          type: integer
          nullable: true
        overtimeMinutes:
          type: integer
          nullable: true
        notes:
          type: string
          nullable: true
        anomalies:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [late, early_leave, absence, overtime]
              minutes:
                type: integer

    AttendanceStatus:
      type: object
      properties:
        userId:
          type: integer
        userName:
          type: string
        checkInTime:
          type: string
          format: date-time
        currentStatus:
          type: string
        duration:
          type: integer
          description: 현재 상태 지속 시간(분)

    AttendanceUpdate:
      type: object
      properties:
        checkInTime:
          type: string
          format: date-time
        checkOutTime:
          type: string
          format: date-time
        notes:
          type: string

    AnomalyRecord:
      type: object
      properties:
        userId:
          type: integer
        userName:
          type: string
        type:
          type: string
        minutes:
          type: integer
        scheduledTime:
          type: string
          format: time
        actualTime:
          type: string
          format: time
          nullable: true

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        totalPages:
          type: integer

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
          nullable: true

  responses:
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: 인증 실패
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: 권한 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT