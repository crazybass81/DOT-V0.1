# Nginx 프론트엔드 서버 설정
# DOT Platform React 애플리케이션용

server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # 로그 설정
    access_log /var/log/nginx/frontend_access.log main;
    error_log /var/log/nginx/frontend_error.log;

    # 보안 헤더 (SPA용)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:; frame-ancestors 'none';" always;

    # 정적 파일 캐싱
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # HTML 파일 캐시 방지
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # API 프록시
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # 타임아웃 설정 (한국어 요구사항: 3초 이내)
        proxy_connect_timeout 3s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # WebSocket 프록시
    location /ws {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 로그인 Rate limiting
    location /api/auth/login {
        limit_req zone=login burst=5 nodelay;

        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # React Router 지원 (SPA)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # === 강화된 헬스체크 엔드포인트들 ===

    # 1. 기본 프론트엔드 헬스체크
    location = /health {
        access_log off;
        add_header Content-Type "application/json; charset=utf-8";
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        return 200 '{"status":"healthy","message":"프론트엔드 서버 정상","service":"frontend","korean_support":"UTF-8","timestamp":"$time_iso8601"}';
    }

    # 2. 정적 파일 서빙 상태 검사
    location = /health/static {
        access_log off;
        try_files /static-health-check.txt @static_health_check;
    }

    location @static_health_check {
        add_header Content-Type "application/json; charset=utf-8";
        return 200 '{"status":"healthy","static_files":"accessible","message":"정적 파일 서빙 정상","timestamp":"$time_iso8601"}';
    }

    # 3. React 라우팅 상태 검사
    location = /health/routing {
        access_log off;
        add_header Content-Type "application/json; charset=utf-8";
        return 200 '{"status":"healthy","routing":"enabled","spa_mode":"active","fallback":"index.html","timestamp":"$time_iso8601"}';
    }

    # 404 에러 페이지
    error_page 404 /index.html;

    # 50x 에러 페이지
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # 보안을 위한 특정 파일 접근 차단
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # favicon.ico
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
}